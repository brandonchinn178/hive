version: 2

aliases:
  # build environment
  - &docker-linux
    docker:
      - image: centos:7
    working_directory: /root/src
  - &docker-ghc
    <<: *docker-linux
    environment:
      NO_GHCJS: true
  - &docker-ghcjs
    <<: *docker-linux
    environment:
      NO_GHC: true

  # caches
  - &build-ghc-cache-key
    run:
      name: Build cache key for ghc
      command: |
        FILES=(
          stack.yaml
          package.yaml
          scripts/install-system-deps.sh
          scripts/install-stack-deps.sh
        )
        cat "${FILES[@]}" > ghc-cache-key.txt
  - &build-ghcjs-cache-key
    run:
      name: Build cache key for ghcjs
      command: |
        FILES=(
          stack.yaml
          ghcjs/stack.yaml
          package.yaml
          scripts/install-system-deps.sh
          scripts/install-stack-deps.sh
        )
        cat "${FILES[@]}" > ghcjs-cache-key.txt
  - &ghc-cache-key
    v0-{{ checksum "ghc-cache-key.txt" }}
  - &ghcjs-cache-key
    v0-{{ checksum "ghcjs-cache-key.txt" }}
  - &cache-paths
    - ~/.stack
    - ~/.ghcjs
    - /usr/local/bin
    - /usr/local/lib/node

  # dependencies
  - &install-system-deps
    run:
      name: Build system dependencies
      command: scripts/install-system-deps.sh
  - &install-stack-deps
    run:
      name: Build stack dependencies
      command: scripts/install-stack-deps.sh
      no_output_timeout: 30m

  # build steps
  - &run-build-ghc
    run:
      name: Build package
      command: stack build -j1 --test --no-run-tests
      no_output_timeout: 30m
  - &run-build-ghcjs
    run:
      name: Build package
      command: |
        ghcjs/build.sh --test --no-run-tests
        tar czf build.tar.gz build/
      no_output_timeout: 30m

  # test steps
  - &run-hlint
    run:
      name: Run hlint
      command: scripts/hlint.sh
  - &run-stylish-haskell
    run:
      name: Run stylish-haskell
      command: scripts/stylish-haskell.sh

jobs:
  prebuild-ghc:
    <<: *docker-ghc
    steps:
      - checkout
      - *build-ghc-cache-key
      - persist_to_workspace:
          root: .
          paths:
            - ghc-cache-key.txt

  prebuild-ghcjs:
    <<: *docker-ghcjs
    steps:
      - checkout
      - *build-ghcjs-cache-key
      - persist_to_workspace:
          root: .
          paths:
            - ghcjs-cache-key.txt

  build-ghc:
    <<: *docker-ghc
    steps:
      - checkout
      - attach_workspace:
          at: .
      # dependencies
      - restore_cache:
          key: *ghc-cache-key
      - *install-system-deps
      - *install-stack-deps
      - save_cache:
          key: *ghc-cache-key
          paths: *cache-paths
      # build
      - *run-build-ghc
      - persist_to_workspace:
          root: .
          paths:
              - .stack-work

  build-ghcjs:
    <<: *docker-ghcjs
    steps:
      - checkout
      - attach_workspace:
          at: .
      # dependencies
      - restore_cache:
          key: *ghc-cache-key
      - restore_cache:
          key: *ghcjs-cache-key
      - *install-system-deps
      - *install-stack-deps
      - save_cache:
          key: *ghcjs-cache-key
          paths: *cache-paths
      # build
      - *run-build-ghcjs
      - persist_to_workspace:
          root: .
          paths:
              - ghcjs/.stack-work
              - build/
      - store_artifacts:
          path: build.tar.gz

  hlint:
    <<: *docker-ghc
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: *ghc-cache-key
      - *run-hlint

  stylish-haskell:
    <<: *docker-ghc
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: *ghc-cache-key
      - *run-stylish-haskell

workflows:
  version: 2

  build_and_test:
    jobs:
      - prebuild-ghc
      - prebuild-ghcjs
      - build-ghc:
          requires:
            - prebuild-ghc
      - build-ghcjs:
          requires:
            - prebuild-ghcjs
            - build-ghc
      - hlint:
          requires:
            - build-ghc
      - stylish-haskell:
          requires:
            - build-ghc
